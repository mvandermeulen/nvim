-- local M = {}
-- M.mappings = {
--   ["name"] = " Telescope",
--   ["a"] = {
--     ["name"] = "ﰍ Web browse",
--     ["b"] = {
--       "<CMD>lua require('browse').browse({ bookmarks = require('configs.telescope.browse') })<CR>",
--       " Browse bookmarks",
--     },
--     ["o"] = {
--       "<CMD>lua require('browse').open_bookmarks({ bookmarks = require('configs.telescope.browse') })<CR>",
--       " Open bookmarks",
--     },
--     ["i"] = { "<CMD>lua require('browse').input_search()<CR>", " Input search" },
--   },
--   ["b"] = { "<CMD>Telescope buffers<CR>", " Buffers" },
--   ["c"] = { "<CMD>Telescope neoclip<CR>", " Neoclip" },
--     -- C = { '<cmd>lua require("fzf-lua").command_history()<cr>', ' Command History' },
--   ["e"] = { "<CMD>Telescope env<CR>", " Variable" },
--   ["f"] = {
--     ["name"] = " File operations",
--     ["f"] = { "<CMD>Telescope find_files<CR>", " Find files" },
--     ["F"] = {
--       "<CMD>lua require('telescope.builtin').find_files(require('telescope.themes').get_dropdown{previewer = false})<CR>",
--       " Find files drop",
--     },
--     ["o"] = { "<CMD>Telescope oldfiles<CR>", " Old files" },
--     ["w"] = { "<CMD>Telescope live_grep<CR>", " Word search [L]" },
--     ["W"] = { "<CMD>Telescope grep_string<CR>", " Word search" },
--     ["i"] = { "<CMD>Telescope media_files<CR>", " Media files" },
--     ["z"] = { "<CMD>Telescope file_browser<CR>", " File browser" },
--     ["c"] = { "<CMD>Telescope zoxide list<CR>", " ZOxide" },
--   },
--   ["g"] = {
--     ["name"] = " Git files",
--     ["f"] = { "<CMD>Telescope git_files<CR>", " Files" },
--     ["t"] = { "<CMD>Telescope git_stash<CR>", " Stash" },
--     ["s"] = { "<CMD>Telescope git_status<CR>", " Status" },
--     ["c"] = { "<CMD>Telescope git_commits<CR>", " Commits" },
--     ["b"] = { "<CMD>Telescope git_branches<CR>", " Branches" },
--     ["m"] = { "<CMD>Telescope git_bcommits<CR>", " BCommits" },
--     ["r"] = { "<CMD>Telescope repo<CR>", " Repositories" },
--   },
--   ["h"] = {
--     ["name"] = " Help",
--     ["h"] = { "<CMD>Telescope help_tags<CR>", " Help tags" },
--     ["m"] = { "<CMD>Telescope man_pages<CR>", " Man Pages" },
--     ["c"] = { "<CMD>Telescope cheatsheet<CR>", " Cheatsheet" },
--     ["o"] = { "<CMD>Telescope vim_options<CR>", "הּ Vim options" },
--     ["p"] = { "<CMD>Telescope commands<CR>", " Vim commands" },
--     ["k"] = { "<CMD>Telescope keymaps<CR>", " Vim Mappings" },
--     ["a"] = { "<CMD>Telescope autocommands<CR>", " Vim autocmds" },
--   },
--   ["H"] = {
--     ["name"] = "History",
--     ["s"] = { "<CMD>Telescope search_history<CR>", " Search history" },
--     ["c"] = { "<CMD>Telescope command_history<CR>", " Command history" },
--   },
--   ["k"] = { "<CMD>Telescope pickers<CR>", " Pickers" },
--   ["l"] = { "<CMD>Telescope resume<CR>", "Load previous state" },
--   ["m"] = { "<CMD>Telescope marks<CR>", "Marks" },
--   ["n"] = { "<CMD>Telescope notify<CR>", " Notifications" },
--   -- ["p"] = { "<CMD>Telescope project<CR>", " Projects" },
--   ["r"] = { "<CMD>Telescope registers<CR>", " Registers" },
--   ["s"] = {
--     ["name"] = "ﲃ Glyphs and symbols",
--     ["s"] = { "<CMD>Telescope symbols<CR>", " Symbols" },
--     ["e"] = { "<CMD>Telescope emoji<CR>", "  Emojis" },
--   },
--   ["t"] = { "<CMD>Telescope filetypes<CR>", " Filetypes" },
--   ["w"] = {
--     ["name"] = " Code",
--     ["s"] = { "<CMD>Telescope spell_suggest<CR>", " Spelling" },
--     ["t"] = { "<CMD>Telescope colorscheme<CR>", " Change theme" },
--     ["l"] = {
--       ["name"] = " LSP",
--       ["w"] = { "<CMD>Telescope lsp_dynamic_workspace_symbols<CR>", " Dynamic workspace symbols" },
--       ["A"] = { "<CMD>Telescope lsp_range_code_actions<CR>", " Range code actions" },
--       ["s"] = { "<CMD>Telescope lsp_workspace_symbols<CR>", " Workspace symbols" },
--       ["S"] = { "<CMD>Telescope lsp_document_symbols<CR>", " Document symbols" },
--       ["D"] = { "<CMD>Telescope lsp_type_definitions<CR>", " Type definitions" },
--       ["i"] = { "<CMD>Telescope lsp_implementations<CR>", " Implementations" },
--       ["a"] = { "<CMD>Telescope lsp_code_actions<CR>", " Code actions" },
--       ["d"] = { "<CMD>Telescope lsp_definitions<CR>", " Definitions" },
--       ["r"] = { "<CMD>Telescope lsp_references<CR>", " References" },
--     },
--   },
--   ["z"] = { "<CMD>Telescope current_buffer_fuzzy_find<CR>", " FZF" },
-- }


--[[
-- Mappings: Telescope
-- Author: Mark van der Meulen
-- Updated: 2025-06-03
--]]

return {
  { '<leader>tb', "<CMD>Telescope buffers<CR>", desc = " Buffers" },
  { '<leader>tc', "<CMD>Telescope neoclip<CR>", desc = " Neoclip" },
  { '<leader>tC', "<CMD>Telescope cheat<CR>", desc = " Cheat" },
  { '<leader>te', "<CMD>Telescope env<CR>", desc = " Variable" },
  { '<leader>tk', "<CMD>Telescope pickers<CR>", desc = " Pickers" },
  { '<leader>tl', "<CMD>Telescope resume<CR>", desc = "Load previous state" },
  { '<leader>tm', "<CMD>Telescope marks<CR>", desc = " Marks" },
  { '<leader>tf', function() require("telescope").extensions.frecency.frecency() end, desc = "  Recent Files" },
  { '<leader>tF', "<CMD>Telescope file_structure<CR>", desc = " File Structure" },
  { '<leader>tm', "<CMD>Telescope heading<CR>", desc = "󰉫 Markdown Headings" },
  { '<leader>tn', "<CMD>Telescope notify<CR>", desc = " Notifications" },
  { '<leader>tp', "<cmd>lua require('telescope').extensions.projects.projects()<cr>", desc = ' Projects' },
  { '<leader>tq', "<CMD>Telescope ghq<CR>", desc = '  ghq' },
  { '<leader>tr', "<CMD>Telescope registers<CR>", desc = " Registers" },
  { "<leader>tR", "<CMD>Telescope recall<CR>", desc = " Recall" },
  { "<leader>ts", "<CMD>lua require('search').open()<CR>", desc = " Search" },
  { '<leader>tS', function() require("telescope").extensions.resession.resession() end, desc = "Resession" },
  { '<leader>tt', "<CMD>Telescope filetypes<CR>", desc = " Filetypes" },
  { '<leader>tu', function() require("telescope").extensions.undo.undo({ side_by_side = true }) end, desc = "󰑖 Undo" },
  { '<leader>tz', "<CMD>Telescope current_buffer_fuzzy_find<CR>", desc = " Current Buffer Fuzzy Find" },
  -- Web Browsing
  { '<leader>twb', "<CMD>lua require('browse').browse({ bookmarks = require('configs.telescope.browse') })<CR>", desc = " Browse bookmarks" },
  { '<leader>two', "<CMD>lua require('browse').open_bookmarks({ bookmarks = require('configs.telescope.browse') })<CR>", desc = " Open bookmarks" },
  { '<leader>twi', "<CMD>lua require('browse').input_search()<CR>", desc = "Input search" },
  -- Files
  { '<leader>tff', "<CMD>Telescope find_files<CR>", desc = " Find files" },
  { '<leader>tfF', "<CMD>lua require('telescope.builtin').find_files(require('telescope.themes').get_dropdown{previewer = false})<CR>", desc = " Find files drop" },
  { '<leader>tfo', "<CMD>Telescope oldfiles<CR>", desc = " Old files" },
  { '<leader>tfw', "<CMD>Telescope live_grep<CR>", desc = " Word search [L]" },
  { '<leader>tfW', "<CMD>Telescope grep_string<CR>", desc = "Word search" },
  { '<leader>tfi', "<CMD>Telescope media_files<CR>", desc = "Media files" },
  { '<leader>tfz', "<CMD>Telescope file_browser<CR>", desc = " File browser" },
  { '<leader>tfc', "<CMD>Telescope zoxide list<CR>", desc = "ZOxide" },
  -- Git
  { '<leader>tgf', "<CMD>Telescope git_files<CR>", desc = " Files" },
  { '<leader>tgt', "<CMD>Telescope git_stash<CR>", desc = " Stash" },
  { '<leader>tgs', "<CMD>Telescope git_status<CR>", desc = " Status" },
  { '<leader>tgc', "<CMD>Telescope git_commits<CR>", desc = " Commits" },
  { '<leader>tgb', "<CMD>Telescope git_branches<CR>", desc = " Branches" },
  { '<leader>tgm', "<CMD>Telescope git_bcommits<CR>", desc = " BCommits" },
  { '<leader>tgd', function() require('telescope').extensions.git_diffs.diff_commits() end, desc = " Diffs" },
  { '<leader>tgr', "<CMD>Telescope repo<CR>", desc = " Repositories" },
  { '<leader>tG', group = ' Github' },
  { '<leader>tGi', function() require('telescope').extensions.gh.issues() end, desc = 'Issues' },
  { '<leader>tGp', function() require('telescope').extensions.gh.pull_request() end, desc = 'Pull Request' },
  { '<leader>tGg', function() require('telescope').extensions.gh.gist() end, desc = 'Gist' },
  { '<leader>tGr', function() require('telescope').extensions.gh.run() end, desc = 'Run GH' },
  -- Help
  { '<leader>thh', "<CMD>Telescope help_tags<CR>", desc = " Help tags" },
  { '<leader>thm', "<CMD>Telescope man_pages<CR>", desc = " Man Pages" },
  { '<leader>thc', "<CMD>Telescope cheatsheet<CR>", desc = " Cheatsheet" },
  { '<leader>tho', "<CMD>Telescope vim_options<CR>", desc = "הּ Vim options" },
  { '<leader>thp', "<CMD>Telescope commands<CR>", desc = " Vim commands" },
  { '<leader>thk', "<CMD>Telescope keymaps<CR>", desc = " Vim Mappings" },
  { '<leader>tha', "<CMD>Telescope autocommands<CR>", desc = "Vim autocmds" },
  -- History
  { '<leader>tHs', "<CMD>Telescope search_history<CR>", desc = " Search history" },
  { '<leader>tHc', "<CMD>Telescope command_history<CR>", desc = " Command history" },
  -- Glyphs and symbols
  { '<leader>tss', "<CMD>Telescope symbols<CR>", desc = " Symbols" },
  { '<leader>tse', "<CMD>Telescope emoji<CR>", desc = "  Emojis" },
  -- Code
  { '<leader>tcs', "<CMD>Telescope spell_suggest<CR>", desc = " Spelling" },
  { '<leader>tct', "<CMD>Telescope colorscheme<CR>", desc = " Change theme" },
  -- LSP
  { '<leader>tclw', "<CMD>Telescope lsp_dynamic_workspace_symbols<CR>", desc = " Dynamic workspace symbols" },
  { '<leader>tclA', "<CMD>Telescope lsp_range_code_actions<CR>", desc = " Range code actions" },
  { '<leader>tcls', "<CMD>Telescope lsp_workspace_symbols<CR>", desc = " Workspace symbols" },
  { '<leader>tclS', "<CMD>Telescope lsp_document_symbols<CR>", desc = " Document symbols" },
  { '<leader>tclD', "<CMD>Telescope lsp_type_definitions<CR>", desc = " Type definitions" },
  { '<leader>tcli', "<CMD>Telescope lsp_implementations<CR>", desc = " Implementations" },
  { '<leader>tcla', "<CMD>Telescope lsp_code_actions<CR>", desc = " Code actions" },
  { '<leader>tcld', "<CMD>Telescope lsp_definitions<CR>", desc = " Definitions" },
}
